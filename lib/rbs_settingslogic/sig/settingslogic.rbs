class Settingslogic < Hash[untyped, untyped]
  extend Enumerable[[untyped, untyped]]
  def self.each: [U] () { ([untyped, untyped] arg0) -> U } -> self
               | () -> Enumerator[[untyped, untyped], self]
  def self.get: (untyped key) -> untyped
  def self.souce: (?untyped value) -> untyped
  def self.namespace: (?untyped value) -> untyped
  def self.suppress_errors: (?untyped value) -> untyped
  def self.[]: (untyped key) -> untyped
  def self.[]=: (untyped key, untyped val) -> untyped
  def self.load!: () -> true
  def self.reload!: () -> true

  def []: (untyped key) -> untyped
  def []=: (untyped key, untyped val) -> untyped
  def to_hash: () -> Hash[untyped, untyped]
  def symbolize_keys: () -> Hash[untyped, untyped]
end
